X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
library(ggplot2)
###########################################################################
###########################################################################
###                                                                     ###
###             VASICEK PORTFOLIO LOSS MODEL                            ###
###                                                                     ###
###########################################################################
###########################################################################
# This program plots both the density and the cumulative portfolio loan loss distribution
#Probability of default
pd = 0.08
#Portfolio correlation
rho = 0.2
#Make a sequence of portfolio loan loss x = amount defaulted loan/total number of loan
x <- seq(0,1,by=0.0001)
x <- x[2:(length(x)-1)]
x[1]<-0.00001
x[length(x)]<-(1-x[1])
#Vector with pds
p <- rep(1-pd,length(x))
#Portfolio loan loss x cummulative distribution
portfolio_loss_cum <- function(x,pd,rho){
c <- pnorm((sqrt(1-rho)* qnorm(x)-qnorm(pd))/sqrt(rho))
return(c)
}
#Portfolio loan loss x density
portfolio_loss_density <- function(x,pd,rho){
d <- sqrt((1-rho)/rho)*exp( -1/(2*rho)*(sqrt(1-rho)*qnorm(x)-qnorm(pd))^2+0.5*qnorm(x)^2)
return(d)
}
#Check the integral of the density between 0 and 1. Should be one
area <- integrate(portfolio_loss_density,0.00001,0.99999,pd,rho)
print(area)
#Density of loan loss distribution
t <- portfolio_loss_density(x,pd,rho)
#Plot cummulative distribution
plot(x,c,type = 'l',ylim = c(0,1))
#Plot density
plot(x,t,type = 'l',xlim=c(0,median(t)))
#Test
#X_i = Sqrt(rho)*S
n = 4000
port_loss_model <- function(n,rho,pd){
loss_lim <- qnorm(pd)
systematic_factor <- rep(rnorm(1),n)
idiosyncratic_factor <- rnorm(n)
firm_value <- sqrt(rho)*systematic_factor+sqrt(1-rho)*idiosyncratic_factor
X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
library(ggplot2)
###########################################################################
###########################################################################
###                                                                     ###
###             VASICEK PORTFOLIO LOSS MODEL                            ###
###                                                                     ###
###########################################################################
###########################################################################
# This program plots both the density and the cumulative portfolio loan loss distribution
#Probability of default
pd = 0.1
#Portfolio correlation
rho = 0.2
#Make a sequence of portfolio loan loss x = amount defaulted loan/total number of loan
x <- seq(0,1,by=0.0001)
x <- x[2:(length(x)-1)]
x[1]<-0.00001
x[length(x)]<-(1-x[1])
#Vector with pds
p <- rep(1-pd,length(x))
#Portfolio loan loss x cummulative distribution
portfolio_loss_cum <- function(x,pd,rho){
c <- pnorm((sqrt(1-rho)* qnorm(x)-qnorm(pd))/sqrt(rho))
return(c)
}
#Portfolio loan loss x density
portfolio_loss_density <- function(x,pd,rho){
d <- sqrt((1-rho)/rho)*exp( -1/(2*rho)*(sqrt(1-rho)*qnorm(x)-qnorm(pd))^2+0.5*qnorm(x)^2)
return(d)
}
#Check the integral of the density between 0 and 1. Should be one
area <- integrate(portfolio_loss_density,0.00001,0.99999,pd,rho)
print(area)
#Density of loan loss distribution
t <- portfolio_loss_density(x,pd,rho)
#Plot cummulative distribution
plot(x,c,type = 'l',ylim = c(0,1))
#Plot density
plot(x,t,type = 'l',xlim=c(0,median(t)))
#Test
#X_i = Sqrt(rho)*S
n = 4000
port_loss_model <- function(n,rho,pd){
loss_lim <- qnorm(pd)
systematic_factor <- rep(rnorm(1),n)
idiosyncratic_factor <- rnorm(n)
firm_value <- sqrt(rho)*systematic_factor+sqrt(1-rho)*idiosyncratic_factor
X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
library(ggplot2)
###########################################################################
###########################################################################
###                                                                     ###
###             VASICEK PORTFOLIO LOSS MODEL                            ###
###                                                                     ###
###########################################################################
###########################################################################
# This program plots both the density and the cumulative portfolio loan loss distribution
#Probability of default
pd = 0.1
#Portfolio correlation
rho = 0.3
#Make a sequence of portfolio loan loss x = amount defaulted loan/total number of loan
x <- seq(0,1,by=0.0001)
x <- x[2:(length(x)-1)]
x[1]<-0.00001
x[length(x)]<-(1-x[1])
#Vector with pds
p <- rep(1-pd,length(x))
#Portfolio loan loss x cummulative distribution
portfolio_loss_cum <- function(x,pd,rho){
c <- pnorm((sqrt(1-rho)* qnorm(x)-qnorm(pd))/sqrt(rho))
return(c)
}
#Portfolio loan loss x density
portfolio_loss_density <- function(x,pd,rho){
d <- sqrt((1-rho)/rho)*exp( -1/(2*rho)*(sqrt(1-rho)*qnorm(x)-qnorm(pd))^2+0.5*qnorm(x)^2)
return(d)
}
#Check the integral of the density between 0 and 1. Should be one
area <- integrate(portfolio_loss_density,0.00001,0.99999,pd,rho)
print(area)
#Density of loan loss distribution
t <- portfolio_loss_density(x,pd,rho)
#Plot cummulative distribution
plot(x,c,type = 'l',ylim = c(0,1))
#Plot density
plot(x,t,type = 'l',xlim=c(0,median(t)))
#Test
#X_i = Sqrt(rho)*S
n = 4000
port_loss_model <- function(n,rho,pd){
loss_lim <- qnorm(pd)
systematic_factor <- rep(rnorm(1),n)
idiosyncratic_factor <- rnorm(n)
firm_value <- sqrt(rho)*systematic_factor+sqrt(1-rho)*idiosyncratic_factor
X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
library(ggplot2)
###########################################################################
###########################################################################
###                                                                     ###
###             VASICEK PORTFOLIO LOSS MODEL                            ###
###                                                                     ###
###########################################################################
###########################################################################
# This program plots both the density and the cumulative portfolio loan loss distribution
#Probability of default
pd = 0.2
#Portfolio correlation
rho = 0.2
#Make a sequence of portfolio loan loss x = amount defaulted loan/total number of loan
x <- seq(0,1,by=0.0001)
x <- x[2:(length(x)-1)]
x[1]<-0.00001
x[length(x)]<-(1-x[1])
#Vector with pds
p <- rep(1-pd,length(x))
#Portfolio loan loss x cummulative distribution
portfolio_loss_cum <- function(x,pd,rho){
c <- pnorm((sqrt(1-rho)* qnorm(x)-qnorm(pd))/sqrt(rho))
return(c)
}
#Portfolio loan loss x density
portfolio_loss_density <- function(x,pd,rho){
d <- sqrt((1-rho)/rho)*exp( -1/(2*rho)*(sqrt(1-rho)*qnorm(x)-qnorm(pd))^2+0.5*qnorm(x)^2)
return(d)
}
#Check the integral of the density between 0 and 1. Should be one
area <- integrate(portfolio_loss_density,0.00001,0.99999,pd,rho)
print(area)
#Density of loan loss distribution
t <- portfolio_loss_density(x,pd,rho)
#Plot cummulative distribution
plot(x,c,type = 'l',ylim = c(0,1))
#Plot density
plot(x,t,type = 'l',xlim=c(0,median(t)))
#Test
#X_i = Sqrt(rho)*S
n = 4000
port_loss_model <- function(n,rho,pd){
loss_lim <- qnorm(pd)
systematic_factor <- rep(rnorm(1),n)
idiosyncratic_factor <- rnorm(n)
firm_value <- sqrt(rho)*systematic_factor+sqrt(1-rho)*idiosyncratic_factor
X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
library(ggplot2)
###########################################################################
###########################################################################
###                                                                     ###
###             VASICEK PORTFOLIO LOSS MODEL                            ###
###                                                                     ###
###########################################################################
###########################################################################
# This program plots both the density and the cumulative portfolio loan loss distribution
#Probability of default
pd = 0.2
#Portfolio correlation
rho = 0.2
#Make a sequence of portfolio loan loss x = amount defaulted loan/total number of loan
x <- seq(0,1,by=0.0001)
x <- x[2:(length(x)-1)]
x[1]<-0.00001
x[length(x)]<-(1-x[1])
#Vector with pds
p <- rep(1-pd,length(x))
#Portfolio loan loss x cummulative distribution
portfolio_loss_cum <- function(x,pd,rho){
c <- pnorm((sqrt(1-rho)* qnorm(x)-qnorm(pd))/sqrt(rho))
return(c)
}
#Portfolio loan loss x density
portfolio_loss_density <- function(x,pd,rho){
d <- sqrt((1-rho)/rho)*exp( -1/(2*rho)*(sqrt(1-rho)*qnorm(x)-qnorm(pd))^2+0.5*qnorm(x)^2)
return(d)
}
#Check the integral of the density between 0 and 1. Should be one
area <- integrate(portfolio_loss_density,0.00001,0.99999,pd,rho)
print(area)
#Density of loan loss distribution
t <- portfolio_loss_density(x,pd,rho)
#Plot cummulative distribution
plot(x,c,type = 'l')
#Plot density
plot(x,t,type = 'l')
#Test
#X_i = Sqrt(rho)*S
n = 4000
port_loss_model <- function(n,rho,pd){
loss_lim <- qnorm(pd)
systematic_factor <- rep(rnorm(1),n)
idiosyncratic_factor <- rnorm(n)
firm_value <- sqrt(rho)*systematic_factor+sqrt(1-rho)*idiosyncratic_factor
X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
#Plot density
plot(x,t,type ='l')
library(ggplot2)
###########################################################################
###########################################################################
###                                                                     ###
###             VASICEK PORTFOLIO LOSS MODEL                            ###
###                                                                     ###
###########################################################################
###########################################################################
# This program plots both the density and the cumulative portfolio loan loss distribution
#Probability of default
pd = 0.2
#Portfolio correlation
rho = 0.2
#Make a sequence of portfolio loan loss x = amount defaulted loan/total number of loan
x <- seq(0,1,by=0.0001)
x <- x[2:(length(x)-1)]
x[1]<-0.00001
x[length(x)]<-(1-x[1])
#Vector with pds
p <- rep(1-pd,length(x))
#Portfolio loan loss x cummulative distribution
portfolio_loss_cum <- function(x,pd,rho){
c <- pnorm((sqrt(1-rho)* qnorm(x)-qnorm(pd))/sqrt(rho))
return(c)
}
#Portfolio loan loss x density
portfolio_loss_density <- function(x,pd,rho){
d <- sqrt((1-rho)/rho)*exp( -1/(2*rho)*(sqrt(1-rho)*qnorm(x)-qnorm(pd))^2+0.5*qnorm(x)^2)
return(d)
}
#Check the integral of the density between 0 and 1. Should be one
area <- integrate(portfolio_loss_density,0.00001,0.99999,pd,rho)
print(area)
#Density of loan loss distribution
t <- portfolio_loss_density(x,pd,rho)
#Plot cummulative distribution
plot(x,c,type ='l')
#Plot density
plot(x,t,type ='l')
#Test
#X_i = Sqrt(rho)*S
n = 4000
port_loss_model <- function(n,rho,pd){
loss_lim <- qnorm(pd)
systematic_factor <- rep(rnorm(1),n)
idiosyncratic_factor <- rnorm(n)
firm_value <- sqrt(rho)*systematic_factor+sqrt(1-rho)*idiosyncratic_factor
X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
library(ggplot2)
###########################################################################
###########################################################################
###                                                                     ###
###             VASICEK PORTFOLIO LOSS MODEL                            ###
###                                                                     ###
###########################################################################
###########################################################################
# This program plots both the density and the cumulative portfolio loan loss distribution
#http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.139.5752&rep=rep1&type=pdf
#Probability of default
pd = 0.2
#Portfolio correlation
rho = 0.2
#Make a sequence of portfolio loan loss x = amount defaulted loan/total number of loan
x <- seq(0,1,by=0.0001)
x <- x[2:(length(x)-1)]
x[1]<-0.00001
x[length(x)]<-(1-x[1])
#Vector with pds
p <- rep(1-pd,length(x))
#Portfolio loan loss x cummulative distribution
portfolio_loss_cum <- function(x,pd,rho){
c <- pnorm((sqrt(1-rho)* qnorm(x)-qnorm(pd))/sqrt(rho))
return(c)
}
#Portfolio loan loss x density
portfolio_loss_density <- function(x,pd,rho){
d <- sqrt((1-rho)/rho)*exp( -1/(2*rho)*(sqrt(1-rho)*qnorm(x)-qnorm(pd))^2+0.5*qnorm(x)^2)
return(d)
}
#Check the integral of the density between 0 and 1. Should be one
area <- integrate(portfolio_loss_density,0.00001,0.99999,pd,rho)
print(area)
#Density of loan loss distribution
t <- portfolio_loss_density(x,pd,rho)
#Plot cummulative distribution
plot(x,c,type ='l')
#Plot density
plot(x,t,type ='l')
#Test
#X_i = Sqrt(rho)*S
n = 4000
port_loss_model <- function(n,rho,pd){
loss_lim <- qnorm(pd)
systematic_factor <- rep(rnorm(1),n)
idiosyncratic_factor <- rnorm(n)
firm_value <- sqrt(rho)*systematic_factor+sqrt(1-rho)*idiosyncratic_factor
X <- firm_value<loss_lim
port_loss = sum(X)/length(X)
}
number_of_years = 8000
x_sim <- rep(0,number_of_years)
for (i in seq(1,number_of_years)){
x_sim[i]=port_loss_model(n,rho,pd)
}
#hist(x_sim,xlab='x',xlim=c(0,median(t)) )
hist(x_sim,xlab='x')
par(new=T)
plot(x,t,type='l',col='red',ylab='',xlab='', xaxt = "n",yaxt = "n")
legend("topright",legend=c('Simulated loan loss','Teoretical loan loss'),
col = c("black", "red"), lty = c(1, 2))
install.packages("shiny")
install.packages(c("ggplot2", "shiny"))
shiny::runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
shiny::runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
z = rnorm(100)
z
kurtosis
library(moments)
install.packages('moments')
library(moments)
kurtosis(x)
kurtosis(rnorm(1000))
kurtosis(rnorm(1000000))
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
kurtosis(rnorm(1
'Kurtosis = '+str(round(kurtosis(df$loss_rate,3)))
'Kurtosis = '+str(2)
'Kurtosis = '&str(2)
'Kurtosis = '|str(2)
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
paste('Kurtosis = ',str(3))
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
runApp('~/Geek/loan_losses/loss')
kurtosis(rnorm(10000))
r = rnorm(100)
mean(r)
var(r)
## kurtosis -
kurtosis(r)
kurtosis(rnorm(10000), method="sample_excess")
kurtosis(rnorm(10000), method="sample_excess")
set.seed(1234)
kurtosis(rnorm(1000))
set.seed(1234)
kurtosis(rnorm(1000))
kurtosis(rnorm(10000), method="sample_excess")
kurtosis(rnorm(100),method="sample_excess")
kurtosis(rnorm(100),method="sample_excess"))
kurtosis(rnorm(100),method="sample_excess")
kurtosis(rnorm(100),method="sample_excess")
data(managers)
kurtosis(managers[,1:8])
data(portfolio_bacon)
print(kurtosis(portfolio_bacon[,1], method="sample")) #expected 3.03
print(kurtosis(portfolio_bacon[,1], method="sample_excess")) #expected -0.41
print(kurtosis(managers['1996'], method="sample"))
print(kurtosis(managers['1996',1], method="sample"))
install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
kurtosis(rnorm(1000))
kurtosis(rnorm(10000))
kurtosis(rnorm(10000),method='sample_excess')
kurtosis(rnorm(100000),method='sample_excess')
kurtosis(rnorm(1000000),method='sample_excess')
runApp('~/Geek/loan_losses/loss')
''
install.packages('rsconnect')
rsconnect::setAccountInfo(name='troflog', token='C2E4881B2E868C54E08C92C310A120B6', secret='Dz69A3SOSIFYt/qrRzCyAMe999hlDorKXPcXVPCL')
